stages:
  - build
  - unit-tests
  - integration-tests
  - analyzers


Build:
  stage: build
  image: ubuntu:19.10
  tags:
    - docker
  script:
    - SOURCE_DIR=${PWD}
    - BUILD_DIR="${SOURCE_DIR}/build"
    - ${SOURCE_DIR}/doc/prepare_build.sh
    - mkdir -p ${BUILD_DIR}
    - mkdir -p /tmp/logs
    - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_CLANG_TIDY="${SOURCE_DIR}/cmake/clang-tidy.py;-checks=*;-header-filter=.*;" -S ${SOURCE_DIR} -B ${BUILD_DIR}
    - cd ${BUILD_DIR} && make -j$(nproc)
    - cp -r /tmp/logs ${BUILD_DIR}
  artifacts:
    paths:
      - build
    expire_in: 1 week


Unit tests:
  stage: unit-tests
  image: ubuntu:19.10
  tags:
    - docker
  script:
    - cd build/bin/
    - ./run_tests --log_level=test_suite --detect_memory_leaks=1 --build_info


Integration tests:
  timeout: 45m
  stage: integration-tests
  image: ubuntu:19.10
  tags:
    - docker
  script:
    - ./doc/prepare_build.sh
    - PROJECT_SOURCE_DIR=${PWD}
    - TEST_DIR="intergation_test_run"
    - mkdir ${TEST_DIR}
    - cd ${TEST_DIR}
    - python3 ${PROJECT_SOURCE_DIR}/test/integration_test/run_test.py -n ${PROJECT_SOURCE_DIR}/build/bin/node -r ${PROJECT_SOURCE_DIR}/build/bin/rpc-client
  artifacts:
    when: always
    paths:
      - intergation_test_run
    expire_in: 1 week


Valgrind test:
  stage: analyzers
  image: ubuntu:19.10
  tags:
    - docker
  script:
    - ./doc/prepare_build.sh
    - cd build/bin
    - valgrind --leak-check=full --error-exitcode=1 --show-leak-kinds=all ./run_tests --log_level=test_suite --detect_memory_leaks=1 --build_info
