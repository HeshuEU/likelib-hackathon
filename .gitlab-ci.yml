stages:
  - build
  - quality
  - test

Build:
  stage: build
  image: heshuby/prepare_build:2019-12-18
  tags:
    - docker
  script: 
    - export INSTALL_DIR="/opt"
    - export PROJECT_SOURCE_DIR=${PWD}
    - export PROJECT_BUILD_DIR="./build"
    - mkdir ${PROJECT_BUILD_DIR}
#    - cp doc/prepare_build.sh ${INSTALL_DIR}
#    - mkdir  ${PROJECT_SOURCE_DIR} && cp -r . ${PROJECT_SOURCE_DIR}

    # after soft installed
    - cd ${PROJECT_BUILD_DIR}
    - cmake ${PROJECT_SOURCE_DIR} -DCMAKE_TOOLCHAIN_FILE=/opt/vcpkg/scripts/buildsystems/vcpkg.cmake
    - make -j$(nproc)
#    - ls build
#    - echo artifacts ${PROJECT_BUILD_DIR} && ls  ${PROJECT_BUILD_DIR}

  artifacts:
    paths:
    - build
    expire_in: 1 week

    
Code quality:
  stage: quality
  image: heshuby/prepare_build:2019-12-18
  tags:
    - docker
  allow_failure: true
  script:
    - apt update && apt install -y clang-tidy
    - echo ${INSTALL_DIR} && ls  ${INSTALL_DIR}
    - echo ${PWD} && ls 
    - cd ./src
    - export INCLUDE="-I/opt/vcpkg/installed/x64-linux/include -I${PWD} -I../build/grpc/gen -std=c++17"
    - clang-tidy node/main.cpp -- ${INCLUDE} # > clang-tidy-node.log
  artifacts:
    paths:
    - clang-tidy-node.log
    expire_in: 1 week


Unit tests:
  stage: test
  tags:
    - docker
  cache: {}
  script:
    - touch unit_test.log
    - echo ${PWD} && ls
    - ls build -l
    - build/test/run_tests --log_level=test_suite --detect_memory_leaks=1 --build_info >> unit_test.log
  artifacts:
    paths:
    - unit_test.log
    expire_in: 1 week

