stages:
  - build
  - unit-tests
  - integration-tests
  - analyzers


Build:
  stage: build
  image: heshuby/prepare_build:e6907a6a60dda94408d99323b9f707f9
  tags:
    - docker
  script:
    - INSTALL_DIR="/opt"
    - SOURCE_DIR="${PWD}"
    - BUILD_DIR="${SOURCE_DIR}/build"
    - md5sum --check "${INSTALL_DIR}/prepare_build.md5" || "${SOURCE_DIR}/doc/prepare_build.sh"
    - mkdir -p ${BUILD_DIR}
    - cmake -DCMAKE_BUILD_TYPE=Release -S ${SOURCE_DIR} -B ${BUILD_DIR}
    - cd ${BUILD_DIR} && make -j$(nproc)
  artifacts:
    paths:
      - build
    expire_in: 1 week


Code quality:
  stage: analyzers
  image: heshuby/prepare_build:e6907a6a60dda94408d99323b9f707f9
  tags:
    - docker
  script:
    - INSTALL_DIR="/opt"
    - SOURCE_DIR="${PWD}"
    - CLANG_LOG_DIR="${SOURCE_DIR}/clang-tidy-log"
    - LOG_DIR="/tmp/logs"
    - BUILD_DIR="${SOURCE_DIR}/build"

    - md5sum --check "${INSTALL_DIR}/prepare_build.md5" || "${SOURCE_DIR}/doc/prepare_build.sh"
    - mkdir -p ${LOG_DIR}
    - mkdir -p ${BUILD_DIR}
    - mkdir -p ${CLANG_LOG_DIR}

    - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_CLANG_TIDY="${SOURCE_DIR}/cmake/clang-tidy.py;-header-filter=.*;" -S ${SOURCE_DIR} -B ${BUILD_DIR} > /dev/null 2>&1
    - cd ${BUILD_DIR} && make > /dev/null 2>&1 || (cp ${LOG_DIR}/* ${CLANG_LOG_DIR} && exit 1)
    - cp ${LOG_DIR}/* ${CLANG_LOG_DIR} && cat ${LOG_DIR}/clang-tidy-output.txt
    - test -f "${LOG_DIR}/.error-flag" && exit 1
  artifacts:
    when: always
    paths:
      - clang-tidy-log
    expire_in: 1 week


Unit tests:
  stage: unit-tests
  image: heshuby/prepare_build:e6907a6a60dda94408d99323b9f707f9
  tags:
    - docker
  script:
    - INSTALL_DIR="/opt"
    - SOURCE_DIR="${PWD}"
    - md5sum --check "${INSTALL_DIR}/prepare_build.md5" || "${SOURCE_DIR}/doc/prepare_build.sh"
    - cd build/bin/
    - ./run_tests --log_level=test_suite --detect_memory_leaks=1 --build_info


Integration tests:
  timeout: 45m
  stage: integration-tests
  image: heshuby/prepare_build:e6907a6a60dda94408d99323b9f707f9
  tags:
    - docker
  script:
    - INSTALL_DIR="/opt"
    - md5sum --check ${INSTALL_DIR}/prepare_build.md5 || ./doc/prepare_build.sh
    - SOURCE_DIR=${PWD}
    - TEST_DIR="intergation_test_run"
    - mkdir ${TEST_DIR}
    - cd ${TEST_DIR}
    - python3 ${SOURCE_DIR}/test/integration_test/run_test.py -b "${SOURCE_DIR}/build/bin"
  artifacts:
    when: always
    paths:
      - intergation_test_run
    expire_in: 1 week


Valgrind test:
  stage: analyzers
  image: heshuby/prepare_build:e6907a6a60dda94408d99323b9f707f9
  tags:
    - docker
  script:
    - cd ./doc
    - md5sum --check ${INSTALL_DIR}/prepare_build.md5 || ./prepare_build.sh
    - cd ../build/bin
    - valgrind --leak-check=full --error-exitcode=1 --show-leak-kinds=all ./run_tests --log_level=test_suite --detect_memory_leaks=1 --build_info
