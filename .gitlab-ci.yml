stages:
  - build
  - quality
  - test

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - /opt

before_script:
    - apt-get update && \
      apt-get install -y software-properties-common && \
      apt-get update -y && \
      apt-get install -y apt-utils && \
      apt-get dist-upgrade -y
    - set INSTALL_DIR /opt
    #- export WORKDIR ${INSTALL_DIR}
    - cp doc/prepare_build.sh ${INSTALL_DIR}
    #- cd ${INSTALL_DIR} && ./prepare_build.sh

Build:
  stage: build
  tags:
    - docker
  script: 
#    - apt-get update && \
#      apt-get install -y software-properties-common && \
#      apt-get update -y && \
#      apt-get install -y apt-utils && \
#      apt-get dist-upgrade -y
#    - export INSTALL_DIR "/opt"
    #- export WORKDIR ${INSTALL_DIR}
#    - cp doc/prepare_build.sh ${INSTALL_DIR}
#    - cd ${INSTALL_DIR} && ./prepare_build.sh
    # after soft installed
    - export PROJECT_SOURCE_DIR /project
    - export PROJECT_BUILD_DIR /build
    - cp . ${PROJECT_SOURCE_DIR}
    - cd ${PROJECT_BUILD_DIR}
    - cmake ${PROJECT_SOURCE_DIR} -DCMAKE_TOOLCHAIN_FILE=/opt/vcpkg/scripts/buildsystems/vcpkg.cmake && \
      make -j$(nproc)

  artifacts:
    paths:
    - ../build
    expire_in: 1 week

    
Code quality:
  stage: quality
  tags:
    - docker
  allow_failure: true
  script:
    - export INCLUDE "-I/opt/vcpkg/installed/x64-linux/include -I${PWD} -I/build/grpc/gen -std=c++17"
    - clang-tidy node/main.cpp -- ${INCLUDE} > clang-tidy-node.log
  artifacts:
    paths:
    - clang-tidy-node.log
    expire_in: 1 week


Unit tests:
  stage: test
  tags:
    - docker
  cache: {}
  script:
    - touch unit_test.log
    - build/test/unit_test/run_tests --log_level=test_suite --detect_memory_leaks=1 --build_info >> unit_test.log
  artifacts:
    paths:
    - unit_test.log
    expire_in: 1 week

Integration tests:
  stage: test
  tags:
    - docker
  cache: {}
  script:
    - apt-get update && \
      apt-get install -y software-properties-common && \
      apt-get update -y && \
      apt-get install -y apt-utils && \
      apt-get dist-upgrade -y
    - apt-get install python3.7
    - export  TEST_FILES_DIR "/likelib"
    - cd ${TEST_FILES_DIR}
    - cp build/src/node/node .
    - cp /build/src/rpc-client/rpc-client .
    - cp /project/test/integration_test test_scripts
    - python3 test_scripts/run_test.py -n ${TEST_FILES_DIR}/node -r ${TEST_FILES_DIR}/rpc-client > integration_test.log
  artifacts:
    paths:
    - integration_test.log
    expire_in: 1 week

