syntax = "proto3";

// Cross platform definitions
option java_multiple_files = true;
option java_package = "by.heshu.likelib.rpc";
option java_outer_classname = "LikelibNodeProto";
option objc_class_prefix = "LKL";

// Service and messages definitions
package likelib;

service NodePublicInterface {

    rpc get_account (Address) returns (AccountInfo) {
    }

    rpc get_node_info (None) returns (NodeInfo) {
    }

    rpc get_block_by_hash (Hash) returns (Block) {
    }

    rpc get_block_by_number (Number) returns (Block) {
    }

    rpc get_transaction (Hash) returns (Transaction) {
    }

    rpc push_transaction (Transaction) returns (TransactionStatus) {
    }

    rpc get_transaction_result (Hash) returns (TransactionStatus) {
    }

}

//=====================================

message NodeInfo {
    Hash top_block_hash = 1;
    uint64 top_block_number = 2;
    uint32 interface_version = 3;
}


message Block {
    Address coinbase = 1;
    Time timestamp = 2;
    uint64 depth = 3;
    uint64 nonce = 4;
    Hash previous_block_hash = 5;
    repeated Transaction transactions = 7;
}


message AccountInfo {
    enum Type {
        CLIENT = 0;
        CONTRACT = 1;
    }
    Type type = 1;
    Address address = 2;
    CurrencyAmount balance = 3;
    uint64 nonce = 4;
    repeated Hash hashes = 5;
}


message Transaction {
    Address from = 1;
    Address to = 2;
    CurrencyAmount value = 3;
    uint64 fee = 4;
    Time creation_time = 5;
    string data = 6;
    Signature signature = 8;
}


message TransactionStatus {
    enum StatusCode {
        Success = 0;
        Pending = 1;
        BadQueryForm = 2;
        BadSign = 3;
        NotEnoughBalance = 4;
        Revert = 5;
        Failed = 6;
    }
    enum ActionType {
        None = 0;
        Transfer = 1;
        ContractCall = 2;
        ContractCreation = 3;
    };
    StatusCode status = 1;
    ActionType type = 2;
    string message = 3;
    uint64 fee_left = 4;
}


message Signature {
    string signature_bytes_at_base_64 = 1;
}


message Time {
    uint32 seconds_since_epoch = 1;
}


message CurrencyAmount {
    string value = 1;
}


message Address {
    string address_at_base_58 = 1;
}


message Hash {
    string bytes_base_64 = 1;
}


message Number {
    uint64 number = 1;
}


message Data {
    string bytes_base_64 = 1;
}


message None {
}
