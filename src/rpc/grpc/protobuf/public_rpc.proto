syntax = "proto3";

// Cross platform definitions
option java_multiple_files = true;
option java_package = "by.heshu.likelib.rpc";
option java_outer_classname = "LikelibNodeProto";
option objc_class_prefix = "LKL";

// Service and messages definitions
package likelib;

service NodePublicInterface {
    rpc test (TestRequest) returns (TestResponse) {
    }

    rpc balance (Address) returns (Money) {
    }

    rpc transaction_to_contract (TransactionToContractRequest) returns (TransactionToContractResponse) {
    }

    rpc transaction_for_create_contract (TransactionCreationContractRequest) returns (TransactionCreationContractResponse) {
    }

    rpc transaction_to_wallet (TransactionToAccountRequest) returns (TransactionToAccountResponse) {
    }
}

message TestRequest {
    uint32 interface_version = 1;
}

message TestResponse {
    OperationStatus status = 1;
}

message TransactionToContractRequest {
    Money value = 1;
    Address from = 2;
    Address to = 3;
    Money gas = 4;
    Time creation_time = 5;
    MessageToContract contract_request = 6;
    Sign signature = 7;
}

message TransactionToContractResponse {
    OperationStatus status = 1;
    Money gas_left = 2;
    MessageFromContract contract_response = 3;
}

message TransactionCreationContractRequest {
    Money value = 1;
    Address from = 2;
    Contract contract = 3;
    Money gas = 4;
    MessageToContract initial_message = 5;
    Time creation_time = 6;
    Sign signature = 7;
}

message TransactionCreationContractResponse {
    OperationStatus status = 1;
    Money gas_left = 2;
    Address contract_address = 3;
}

message TransactionToAccountRequest {
    Money value = 1;
    Address from = 2;
    Address to = 3;
    Money fee = 4;
    Time creation_time = 5;
    Sign signature = 6;
}

message TransactionToAccountResponse {
    OperationStatus status = 1;
}

message MessageToContract {
    string message = 1;
}

message MessageFromContract {
    string message = 1;
}

message Contract {
    string bytecode = 1;
}

message Time {
    uint64 since_epoch = 1;
}

message Money {
    uint64 money = 1;
}

message Address {
    string address = 1;
}

message Sign {
    string signature = 1;
}

message OperationStatus {
    enum StatusCode {
        Success = 0;
        Rejected = 1;
        Failed = 2;
    }
    StatusCode status = 1;
    string message = 2;
}
